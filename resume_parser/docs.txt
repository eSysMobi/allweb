Используется фреймворк Yii, библиотека simple html dom parser
Основный классы в /components
Модель одна, и она просто обеспечивает связь с БД(resumes).
В контроллере просто просто загружаются классы для результатов поиска.
Классы:
	*Sitename*SearchResults.php - объект результатов поиска(там выполняется все до открытия страницы с вакансией)
	Методы:
		get_results - получает результаты
		results_to_db - загружает результаты в базу
	*Sitename*SearchResume.php - объект резюме с сайта(там происходит работа с самим резюме)
	Методы:
		load_from_short_html - достает всю информацию из "анонса" резюме(который в результатах поиска)
		format_date - приводит дату к MySql виду.
		load_full - получает и обрабатывает полное резюме
		get_phone/get_contacts - получает телефон/контакты, там где они скрыты.
		to_db - отправляет в БД
		check_in_db - проверяет, есть ли резюме в БД
	HtmlHelper - объект-посредник между simple html dom parser
	Методы:
		getItem - ищет элемент по селектору(как jquery) и номеру(eq)
		getItems - ищет элементы по селектору и возвращает в массиве
		findContains - находит элемент(или элементы, зависит от параметра all) по вхождению и селектору
		loadHtml - загружает html обычным методом
		curlLoad - загружает html через Curl(там, где нужны куки, реферер и т.д.)
		curlPostRequest - отправляет пост запрос через Curl
		loadHtmlFromString - делает из обычной строки(html) объект SimpleHtmlDomParser
	UtilityHelper - просто вспомогательные функции
		days_ago - считает, сколько дней прошло с заданной даты
		formatPhone - приводит телефон к обычному виду
		format_email - достает email из строки
		cleanString - очищает строку от двойных пробелов/отступов и т.д.
		
		
Ссылки для парсинга
	http://saratov-rabota.com:8081/resume_parser/app/index.php?r=site/AvitoParse - Авито
	